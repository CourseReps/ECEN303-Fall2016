__author__ = "Trevor Spohrer"
__NetID__ = "tspohrer"
__GitHubID__ = "tspohrer"
__SelfGrade__ = "5"
__Challenge__ = "1"
__Answer1__ = "1.0"
__Answer2__ = "6 w/ a probability of 0.3"


import random
import math
import matplotlib.pyplot as plt

ParameterP = 0.3
NumberFlips = 8
NumberTrials = 100000
Trials = []


def biasedcoinflip(p=0.5):
    for TrialIndex in range(0, NumberTrials):
        if random.random()< p:
            return 1
        else:
            return 0


for TrialIndex1 in range(0, NumberTrials):
    Trials.append(biasedcoinflip(ParameterP))

TrialAverage= sum(Trials)/(1.0*len(Trials))
print ('The average number of ones is {0:.4f}.'.format(TrialAverage))

SumTrials = []

for TrialIndex2 in range(0, NumberTrials):
    count = 0
    for i in range(0,NumberFlips):
        if biasedcoinflip(ParameterP)==1:
            count += 1
    SumTrials.append(count)

Distribution = []
for OutcomeIndex1 in range(0, NumberFlips +1):
    Distribution.append(SumTrials.count(OutcomeIndex1)/(1.0*NumberTrials))

print (repr(Distribution))

print ('The sum of the elements in Distribution is ' + str(sum(Distribution)))

OutcomeIndex2 = range(0, NumberFlips + 1)
num_bins = len(OutcomeIndex2)
bar_width = 0.8
XticksIndex = [(outcome + (0.5 * bar_width)) for outcome in OutcomeIndex2]
opacity = 0.4

plt.bar(OutcomeIndex2, Distribution, bar_width, alpha=opacity, color='b')
plt.xlabel("Value")
plt.ylabel("Probability")
plt.xticks(XticksIndex, OutcomeIndex2)
plt.show()

"""
(Describe what happens to the figure as you vary ParameterP from zero to one.

As ParamterP increases from zero to one the number of ones that is produced by the biasedcoinflip will increase.
Increasing ParameterP from zero to one should theoreically shift the curve to the right on the plot.""

"""
